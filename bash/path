# These functions are from: http://www.linuxfromscratch.org/blfs/view/cvs/postlfs/profile.html

# Functions to help us manage paths.  Second argument is the name of the
# path variable to be modified (default: PATH)
pathremove () {
        local IFS=':'
        local NEWPATH
        local DIR
        local PATHVARIABLE=${2:-PATH}
        for DIR in ${!PATHVARIABLE} ; do
                if [ "$DIR" != "$1" ] ; then
                  NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
                fi
        done
        export $PATHVARIABLE="$NEWPATH"
}

pathprepend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
}

pathappend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
}

# Usage: puniq [<path>]
# Remove duplicate entries from a PATH style value while retaining
# the original order. Use PATH if no <path> is given.
#
# Example:
#   $ puniq /usr/bin:/usr/local/bin:/usr/bin
#   /usr/bin:/usr/local/bin
puniq () {
    echo "$1" |tr : '\n' |nl |sort -u -k 2,2 |sort -n |
    cut -f 2- |tr '\n' : |sed -e 's/:$//' -e 's/^://'
}

# Set the initial path
export PATH=/bin:/usr/bin

pathprepend /usr/local/bin
pathappend /usr/local/sbin:/usr/sbin:/sbin

# I was using this, but I think it's obsolete with brew. Remove after Jan 1 2014 if unused.
# Include /opt/local/bin and sbin if they exist
#if [ -d "/opt/local/bin" ] ; then
#    PATH="$PATH:/opt/local/bin"
#fi
#if [ -d "/opt/local/sbin" ] ; then
#    PATH="$PATH:/opt/local/sbin"
#fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    pathprepend "$HOME/bin"
#    PATH="$HOME/bin:$PATH"
fi



# I was using this. I think I may not need it, so I'm commenting it out on 12/15/12.
# PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# Now to clean up
unset pathremove pathprepend pathappend

PATH=$(puniq $PATH)

# The following 3 lines, which must be near the END of the file, tell Emacs to use sh mode for this file
# Local Variables:
# mode: sh
# End:
