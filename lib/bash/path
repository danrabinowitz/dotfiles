# declare -r SCRIPT_NAME=$(readlink -f ${BASH_SOURCE[0]})

if [ -n "$LOG_DOTFILE_TIMES" ]; then
  log "Start of DJR_DOTFILES_DIR:bash/path"
fi

if [ -r ~/.dotfiles/preprocess/processed/path ]; then
    if [ -n "$LOG_DOTFILE_TIMES" ]; then
        log "Sourcing the preprocessed path file"
    fi
    source ~/.dotfiles/preprocess/processed/path
else
    # These functions are from: http://www.linuxfromscratch.org/blfs/view/cvs/postlfs/profile.html

# Functions to help us manage paths.
function pathremove () {
    local IFS=':'
    local NEWPATH
    local DIR
    for DIR in "$PATH" ; do
        if [ "$DIR" != "$1" ] ; then
            NEWPATH="${NEWPATH:+$NEWPATH:}$DIR"
        fi
    done
    export PATH="$NEWPATH"
}

function pathprepend () {
    pathremove $1 $2
    export PATH="$1${PATH:+:${PATH}}"
}

function pathappend () {
    pathremove $1 $2
    export PATH="${PATH:+${PATH}:}$1"
}

# Usage: puniq [<path>]
# Remove duplicate entries from a PATH style value while retaining
# the original order. Use PATH if no <path> is given.
#
# Example:
#   $ puniq /usr/bin:/usr/local/bin:/usr/bin
#   /usr/bin:/usr/local/bin
function puniq () {
    echo "$1" |tr : '\n' |nl |sort -u -k 2,2 |sort -n |
    cut -f 2- |tr '\n' : |sed -e 's/:$//' -e 's/^://'
}

# Set the initial path
export PATH=/bin:/usr/bin

pathprepend /usr/local/bin
pathappend /usr/local/sbin:/usr/sbin:/sbin

# Added on Oct 16, 2013 for node npm
if [ -d "/usr/local/share/npm/bin" ] ; then
    pathappend /usr/local/share/npm/bin
fi

# With XQuartz (needed for Selenium testing)
if [ -d "/opt/X11/bin" ] ; then
    pathappend /opt/X11/bin
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    pathprepend "$HOME/bin"
fi
if [ -d "$HOME/code/bin" ] ; then
    pathprepend "$HOME/code/bin"
fi

if [ -d "/usr/local/go/bin" ] ; then
    pathappend /usr/local/go/bin
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/rootdir/usr/local/bin" ] ; then
    pathprepend "$HOME/rootdir/usr/local/bin"
fi

# I was using this. I think I may not need it, so I'm commenting it out on 12/15/12.
# PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# Now to clean up
unset pathremove pathprepend pathappend

    PATH=$(puniq $PATH)
fi

# Set CDPATH for bash completion
# CDPATH=".:~/Code:~/code:~/code/LS"

[ -r /usr/local/share/chruby/chruby.sh ] && source /usr/local/share/chruby/chruby.sh && \
  [ -r /usr/local/share/chruby/auto.sh ] && source /usr/local/share/chruby/auto.sh

# The following 3 lines, which must be near the END of the file, tell Emacs to use sh mode for this file
# Local Variables:
# mode: sh
# End:
